@import './variables.less';

@tailwind base;
@tailwind components;
@tailwind utilities;
html {
  @media only screen and (min-width: @media-lg) {
    font-size: 18px;
  }
}
body {
  @apply min-h-screen overflow-x-hidden bg-base-100 leading-5 text-base-content;
}
h1,
h2,
h3,
h4,
h5 {
  @apply font-serif uppercase;
}
h1 {
  @apply text-6xl font-semibold;
  @media only screen and (min-width: @media-lg) {
    @apply text-7xl;
  }
}
h2 {
  @apply text-5xl font-semibold;
  @media only screen and (min-width: @media-lg) {
    @apply text-6xl;
  }
}
h3 {
  @apply text-4xl font-semibold;
  @media only screen and (min-width: @media-lg) {
    @apply text-5xl;
  }
}
h4 {
  @apply text-3xl font-semibold;
  @media only screen and (min-width: @media-lg) {
    @apply text-4xl;
  }
}
h5 {
  @apply text-2xl font-semibold;
  @media only screen and (min-width: @media-lg) {
    @apply text-3xl;
  }
}
h6 {
  @apply text-xl font-medium;
  @media only screen and (min-width: @media-lg) {
    @apply text-2xl;
  }
}

.toastify {
  &.success {
    background: oklab(var(--su));
    color: oklab(var(--suc));
  }
  &.error {
    background: oklab(var(--er));
    color: oklab(var(--erc));
  }
  &.info {
    background: oklab(var(--in));
    color: oklab(var(--inc));
  }
  &.warning {
    background: oklab(var(--wa));
    color: oklab(var(--wac));
  }
}
form .group {
  > label {
    @apply mb-2 block font-medium transition-all duration-500 ease-in-out;
  }
  > input,
  > textarea,
  > .choices > .choices__inner {
    @apply ~'p-2.5' mb-2 block w-full rounded-lg border transition-all duration-500 ease-in-out;
  }
  &.error {
    label {
      @apply text-error;
    }
    > input,
    > textarea,
    > .choices > .choices__inner {
      @apply !border-error !bg-error/10 text-error placeholder-error focus:ring-error;
    }
    p.error {
      @apply text-sm text-error;
    }
  }
  > .choices {
    @apply mb-2;
  }
}

.pretty {
  input:checked ~ .state,
  &.p-toggle .state {
    label:after {
      @apply !bg-primary;
    }
    label:before {
      @apply border-primary;
    }
  }
  &.p-default:not(.p-fill) input:checked ~ .state label:after {
    @apply !bg-primary;
  }
  &.p-switch {
    input:checked ~ .state:before {
      @apply border-primary;
    }
    &.p-fill input:checked ~ .state:before {
      @apply !bg-primary;
    }
    &.p-slim input:checked ~ .state:before {
      @apply border-primary !bg-primary;
    }
  }
}

.choices {
  &__inner {
    @apply !rounded-lg !border-base-200 !bg-base-100;
  }
  &__list--multiple .choices__item {
    @apply !border-primary !bg-primary;
  }
  &__input {
    @apply !bg-transparent;
  }
}

.html-render {
  @apply text-justify;
  figure {
    @apply inline-block w-full py-5 text-center;
    figcaption {
      @apply mt-1 inline-block border border-primary-content bg-primary-content px-2 py-1;
    }
  }
  p {
    @apply mb-3;
  }
  img {
    @apply mx-auto;
  }
  h1 {
    @apply mb-7 mt-0 text-primary;
  }
  h2 {
    @apply mb-6 mt-0 text-primary;
  }
  h3 {
    @apply mb-5 mt-0 text-primary;
  }
  h4 {
    @apply mb-4 mt-0 text-primary;
  }
  h5 {
    @apply mb-4 mt-0 text-primary;
  }
  h6 {
    @apply mb-4 mt-0 text-primary;
  }
  table {
    @apply my-3 w-full;
    th,
    td {
      @apply ~'py-1.5' border border-base-200 px-2 text-left;
    }
  }
  blockquote {
    @apply relative m-0 mx-auto mb-7 table border-0 p-4 text-justify text-inherit;
    background:
      linear-gradient(to right, theme('textColor.primary') 2px, transparent 1px) 0 100%,
      linear-gradient(to left, theme('textColor.primary') 2px, transparent 1px) 100% 0,
      linear-gradient(to bottom, theme('textColor.primary') 2px, transparent 1px) 100% 0,
      linear-gradient(to top, theme('textColor.primary') 2px, transparent 1px) 0 100%;
    background-size: 20px 20px;
    background-repeat: no-repeat;

    &:before,
    &:after {
      @apply absolute text-3xl font-black text-primary;
      font-family:
        Line Awesome Free,
        serif;
    }

    &:before {
      @apply -top-3 right-full -mr-3;
      content: '"';
    }

    &:after {
      @apply -bottom-3 left-full top-auto -ml-3;
      content: '"';
    }
  }
}

.hamburger {
  @apply hidden h-7 w-9 flex-col justify-between self-center pb-1 pt-1;

  @media (max-width: @media-md) {
    @apply flex;
  }
  span {
    @apply ~'h-0.5' w-full self-end bg-base-content transition-all duration-300 ease-in-out;
  }
  .meat {
    @apply ~'w-10/12' transition-all duration-150 ease-in-out;
  }
  .bottom-bun {
    @apply ~'w-7/12';
  }
  &:hover span {
    @apply w-full;
  }
  &.active {
    .top-bun {
      @apply ~'translate-y-[0.6rem]' w-full -rotate-45;
    }
    .bottom-bun {
      @apply ~'-translate-y-[0.5rem]' w-full rotate-45;
    }
    .meat {
      @apply w-0;
    }
    &:hover {
      @apply transition-transform duration-300 ease-in-out hover:rotate-90;
    }
  }
  &:not(.active):hover {
    .top-bun {
      @apply animate-burger-hover-2;
    }
    .meat {
      @apply animate-burger-hover-4;
    }
    .bottom-bun {
      @apply animate-burger-hover-6;
    }
  }
}

.hamburger-arrow {
  @apply relative h-6 w-9;
  span {
    @apply ~'h-0.5' absolute left-0 w-full rounded-sm bg-base-100 transition-all duration-300 ease-in-out;
    &.top-bun {
      @apply top-0;
    }
    &.bottom-bun {
      @apply bottom-0;
    }
  }
  &.active span {
    &.top-bun {
      @apply ~'-translate-x-[0.13rem] -translate-y-[0.4rem]' top-6 w-4 rotate-45;
    }
    &.meat {
      @apply w-3/4 rotate-180;
    }
    &.bottom-bun {
      @apply ~'-translate-x-[0.13rem] translate-y-[0.55rem]' bottom-6 w-4 -rotate-45;
    }
  }
}

.mega-menu {
  @apply flex items-center gap-10;
  > li > a {
    @apply font-bold hover:text-primary;
  }
  &.col {
    @apply flex-col gap-2;

    > li {
      @apply w-full;

      > a:has(+ ul):after {
        @apply rotate-0;
      }
      > ul {
        @apply left-auto top-0 ml-80;
        &.mega {
          @apply left-auto;
        }
      }
      &:hover {
        > ul {
          @apply visible opacity-100;
          margin-left: 17rem;
        }
      }
    }
  }
  li {
    @apply relative;

    > a {
      @apply ~'py-1.5' flex items-center gap-3 border-b border-base-300;
      &:has(+ ul) {
        @apply pr-5;
        &::after {
          @apply ~'size-3.5' absolute right-0 top-1/2 -translate-y-1/2 rotate-90 bg-base-content bg-cover;
          content: '';
          mask: url('/assets/images/arrow.svg') no-repeat 100% 100%;
          mask-size: cover;
        }
      }
    }
    > ul {
      width: 250px;
      @apply invisible absolute left-auto top-0 rounded border-t-4 border-warning bg-base-100 opacity-0 shadow transition-all duration-300 ease-in-out;

      &.mega {
        @apply left-10 grid grid-cols-5;
        width: calc(100vw - 30rem);

        > li {
          @apply p-2;

          > ul {
            @apply static m-0 w-full rounded-none border-none bg-transparent opacity-100;

            > li:not(:has(a)) {
              @apply py-3 font-bold text-base-content/50;
            }
          }
        }
      }
      a {
        @apply text-base-content;
        &:has(+ ul) {
          @apply pr-0;
          &::after {
            @apply right-1 rotate-0;
          }
        }
      }
      ul {
        @apply absolute top-0 ml-2 mt-0;
        left: 101%;
      }
      > li {
        @apply pl-3;
      }
    }
    &:hover {
      > ul {
        @apply visible ml-0 mt-0 opacity-100;
        &.mega ul {
          @apply visible opacity-100;
        }
      }
    }
  }
}
form {
  @apply m-10 grid gap-2 rounded-md bg-base-100 p-5 shadow md:p-10;

  > button[type='submit'] {
    @apply ~'p-2.5' rounded-lg border bg-primary text-primary-content;
  }
  .radio {
    @apply mb-2;
    &.pretty {
      .state label {
        &:after {
          @apply scale-50 rounded-full;
        }
        &:before {
          @apply rounded-full;
        }
      }
      input:checked ~ .state label:after {
        @apply bg-primary;
      }
    }
  }
  .checkbox {
    @apply mb-2;
    .state {
      svg {
        @apply absolute left-0 opacity-0;
        z-index: 1;
        width: calc(1em + 2px);
        height: calc(1em + 2px);
        top: calc((0% - (100% - 1em)) - 8%);
      }
      label:after,
      label:before {
        @apply rounded;
      }
    }
    input:checked ~ .state svg {
      opacity: 1;
    }
  }
}
.header {
  @apply fixed left-0 top-0 z-30 w-full;

  > div {
    @apply container mx-auto flex items-center justify-between bg-primary py-4 pl-5 pr-4;

    .menu {
      @apply hidden lg:block;
    }
    > div {
      @apply flex items-center;
    }
  }
}

body {
  @apply bg-base-100 text-base-content;
}
.pagination {
  @apply mx-auto mt-8 flex w-fit items-center gap-2 py-4;
  > a {
    @apply ~'size-[42px]' flex items-center justify-center rounded-full border border-base-300 bg-base-100;

    > svg {
      @apply h-4 w-4;
    }

    &:first-child {
      @apply rotate-180;
    }
  }
  > .active {
    @apply bg-warning text-base-100;
  }
}
